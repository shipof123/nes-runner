MEMORY {
    ZP:     start = $00,    size = $0100, type = rw, file = "";
    OAM:    start = $0200,  size = $0100, type = rw, file = "";
    RAM:    start = $0300,  size = $0500, type = rw, file = "";
    SAV:    start = $6000,  size = $2000, type = rw, file = "";
    HDR:    start = $0000,  size = $0010, type = ro, file = %O, fill = yes, fillval = $00;

    PRG0:   start = $8000,  size = $4000, type = ro, file = %O, fill = yes, fillval = $FF;
    PRG1:   start = $8000,  size = $4000, type = ro, file = %O, fill = yes, fillval = $FF;
    PRG2:   start = $8000,  size = $4000, type = ro, file = %O, fill = yes, fillval = $FF;

    PRG3:   start = $C000,  size = $4000, type = ro, file = %O, fill = yes, fillval = $FF;

    CHR1:    start = $0000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $CC;
    CHR2:    start = $0000,  size = $2000, type = ro, file = %O, fill = yes, fillval = $CC;
}

SEGMENTS {
    # ram stuff
    ZEROPAGE:   load = ZP,  type = zp;
    OAM:        load = OAM, type = bss, align = $100;
    BSS:        load = RAM, type = bss;
    SAVERAM:    load = SAV, type = bss;

    INESHDR:     load = HDR, type = ro, align = $10;

    PAGE0:      load = PRG0, start = $8000, type = ro;
    PAGE1:      load = PRG1, start = $8000, type = ro;
    PAGE2:      load = PRG2, start = $8000, type = ro;

    PAGE3:      load = PRG3, start = $C000, type = ro;
    VECTORS:   load = PRG3, start = $FFFA, type = ro;
    #VECTORS3:   load = PRG3, start = $FFFA, type = ro;
    #VECTORS:    load = PRGFIXED, start = $FFFA, type = ro;

    PATTERN0:    load = CHR1, type = ro;
    PATTERN1:    load = CHR2, type = ro;
    #PATTERN1:    load = CHR, type = ro;
    #PATTERN2:    load = CHR, type = overwrite, start = $1000 optional = yes;
}
